--
-- SCRIPT Mobile_Hanset_Sale, entity for URM
-- Engine: Teradata
-- Server: 10.167.37.107
-- DB: AR_PROD_ODS_DATA_VW
-- Owner: Big Data, Telefonica Argentina

-- - - - - - - ORDENES SUBSIDIOS
CREATE VOLATILE TABLE OPER_SUB, NO LOG AS(

SELECT 
100*EXTRACT(YEAR FROM ORDER_START_DATE)+EXTRACT(YEAR FROM ORDER_START_DATE) AS MONTH_DT,
CONTACT_KEY,
CUSTOMER_KEY,
SUBSCRIBER_KEY,
MSISDN,
IMEI,
AR_INVOICE_KEY,
  CASE 
  WHEN PAYMENT_METHOD_DESC LIKE 'CA;%' THEN 'PAGO MIXTO' 			--OK OJO VER EL PUNTO Y COMA
  WHEN PAYMENT_METHOD_DESC LIKE 'CC;%' THEN 'PAGO MIXTO' 			--OK OJO VER EL PUNTO Y COMA
  WHEN PAYMENT_METHOD_DESC LIKE 'CA%' THEN 'PAGO EN EFECTIVO' 			--OK
  WHEN PAYMENT_METHOD_DESC LIKE 'PB%' THEN 'PAGAR CONTRA FACTURA' 		 			--OK
  WHEN PAYMENT_METHOD_DESC LIKE 'CC%' THEN 'PAGO CON TARJETA DE CREDITO' 		--OK
  WHEN PAYMENT_METHOD_DESC LIKE 'CM%' THEN 'PAGO EN EFECTIVO POR MOL' 		--OK
  WHEN PAYMENT_METHOD_DESC LIKE 'PF%' THEN 'PAGO POR PAGO FACIL' 					--OK
  ELSE 'OTRO' END AS FORMA_PAGO,
DELIVERY_METHOD_DESC,
IDENTIFICATION_1_TYPE_CODE TIPO_DOC,
IDENTIFICATION_DOCUMENT_1_NUMB NRO_DOC,
cd_localidad,
CD_PROVINCIA,
CHARGES_AMOUNT,
DEBIT_AMT,
SAP_ID,
STORE_ID,
TIPO_OPERACION,
ASSIGNED_PRODUCT_REASON_ID,
SALES_CHANNEL_NAME,
ORDER_START_DATE,
ORDER_STATUS_DESC,
PLAN_PRICE ,
PLAN_GROUP,
PRODUCT_KEY,
PRODUCTO,
PRODUCT_DESC,
CPLAN,
OLD_PRODUCTO,
OLD_PRODUCT_DESC,
OLD_PLAN_PRICE ,
PROCEDENCIA_IMEI,
RN_MARCAMODELO.GRUPO,
SUBSTR (GENERICO , 1, POSITION (' ' IN GENERICO ) - 1) AS MARCA,
RN_MARCAMODELO.GENERICO,
RN_MARCAMODELO.VIGENCIA,
RN_MARCAMODELO.BRICK,
RN_MARCAMODELO.RED,
RN_MARCAMODELO.CAMPANA,

RN_ALMACENES.CANAL_COMERCIAL,
RN_ALMACENES.DESCRIPCION,
RN_ALMACENES.TIPO,

AGENT_KEY  ,
AGENT_TYPE ,

ORDER_KEY,
ORDER_ACTION_KEY,
CAST(  ORDER_KEY AS VARCHAR(9)) AS ORDER_KEY_V,
CAST(  ORDER_ACTION_KEY AS VARCHAR(9)) AS ORDER_ACTION_KEY_V

FROM SBX_PROC_CIERRE.CO_OPERACIONES_UNIF A
LEFT JOIN SBX_PROC_CIERRE.RN_MARCAMODELO -- - - - - - - - - - - - - - - - - - - - - - - - - - - CRUCE PARA BUSCAR DATOS DEL TERMINAL
ON COD_SISTEMA = SAP_ID
LEFT JOIN SBX_PROC_CIERRE.RN_ALMACENES-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - CRUCE PARA BUSCAR DATOS DEL ALMACEN
ON COD_ALMACEN = STORE_ID



WHERE
--ORDER_STATUS_DESC IN ('ENVIADO' , 'CERRADO' , 'ABIERTO' ) -- - - - - - - - - - - - - - - - - - - - - - - - -FILTRO OERACIONES NO CANCELADAS
--AND
 ORDER_START_DATE  >= CAST( '20170701' AS DATE FORMAT 'YYYYMMDD')-- - - - - - -DESDE
 AND
 ORDER_START_DATE  <= CAST( '20170731' AS DATE FORMAT 'YYYYMMDD')-- - - - - - - HASTA
--ORDER_FULFILLED_MONTH =  201707
AND
(
(( TIPO_OPERACION IN  ('ALTA')  AND  PROCEDENCIA <> 'REPRO') -- - - - - - - - - - - - - - - - -- - - - -FILTRO ALTAS SIN REPRO
OR
( CATER = 1))-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -FILTRO CATER CON EQUIPO
)

)WITH DATA
PRIMARY INDEX(AR_INVOICE_KEY) 
ON COMMIT PRESERVE ROWS;

-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -CREO TABLA PARA COMPLETAR LOS AR_INVOICE_KEY DE LAS ORDENES

CREATE VOLATILE TABLE CARGOS, NO LOG AS(

SELECT
B.ORDER_ACTION_KEY,
MIN (B.AR_INVOICE_KEY) AS  AR_INVOICE_KEY

 FROM AR_PROD_ODS_DATA_VW.AR_CHARGE B
 
WHERE
 CHARGE_DATE  >= CAST( '20170701' AS DATE FORMAT 'YYYYMMDD')-- - - - - - -DESDE
 AND
 CHARGE_DATE  <= CAST( '20170805' AS DATE FORMAT 'YYYYMMDD')-- - - - - - - HASTA

AND
CHARGE_CODE_KEY IN (1368 , 2639 ) -- - - -CORRESPONDEN A CHARGE_CODE_DESC = 'EQUIPO PROCEDENCIA NACIONAL' 
AND
ORDER_KEY = 0

GROUP BY 1

 )WITH DATA PRIMARY INDEX(ORDER_ACTION_KEY) ON COMMIT PRESERVE ROWS;

-- - - - 

UPDATE OPER_SUB

SET AR_INVOICE_KEY = CARGOS.AR_INVOICE_KEY

WHERE  OPER_SUB.ORDER_ACTION_KEY_V = CARGOS.ORDER_ACTION_KEY
AND
OPER_SUB.AR_INVOICE_KEY IS NULL;

-- - - - - -

CREATE VOLATILE TABLE DETALLE_FACTURA, NO LOG AS(
SELECT
 A.ORDER_KEY,
 B.INVOICE_CREATION_DATE,  					-- ELIMINAR PARA EVITAR ORDENES REPETIDAS
CASE WHEN CHARGE_CODE_DESC = 'DEVICE DISCOUNT' AND CHARGE_NET_AMOUNT >= 0 THEN CHARGE_NET_AMOUNT ELSE 0 END AS DEVICE_DISCOUNT , 
CASE WHEN CHARGE_CODE_DESC = 'DEVICE DISCOUNT' AND CHARGE_NET_AMOUNT < 0 THEN CHARGE_NET_AMOUNT ELSE 0 END AS DEVICE_DISCOUNT_B ,

CASE WHEN CHARGE_CODE_DESC = 'EQUIPO PROCEDENCIA NACIONAL' AND CHARGE_NET_AMOUNT >= 0 THEN CHARGE_NET_AMOUNT ELSE 0 END AS EQUIPO_PROCEDENCIA_NACIONAL , 
CASE WHEN CHARGE_CODE_DESC = 'EQUIPO PROCEDENCIA NACIONAL' AND CHARGE_NET_AMOUNT < 0 THEN CHARGE_NET_AMOUNT ELSE 0 END AS EQUIPO_PROCEDENCIA_NACIONAL_B , 
 
CASE WHEN CHARGE_CODE_DESC = 'WARRANTY' AND CHARGE_NET_AMOUNT >= 0 THEN CHARGE_NET_AMOUNT ELSE 0 END AS WARRANTY , 
CASE WHEN CHARGE_CODE_DESC = 'WARRANTY' AND CHARGE_NET_AMOUNT < 0 THEN CHARGE_NET_AMOUNT ELSE 0 END AS WARRANTY_B ,

CASE WHEN CHARGE_CODE_DESC = 'CARGO SIMCARD' AND CHARGE_NET_AMOUNT >= 0 THEN CHARGE_NET_AMOUNT ELSE 0 END AS CARGO_SIMCARD , 
CASE WHEN CHARGE_CODE_DESC = 'CARGO SIMCARD' AND CHARGE_NET_AMOUNT < 0 THEN CHARGE_NET_AMOUNT ELSE 0 END AS CARGO_SIMCARD_B ,

CASE WHEN CHARGE_CODE_DESC = 'INTERESES POR FINANCIACION' AND CHARGE_NET_AMOUNT >= 0 THEN CHARGE_NET_AMOUNT ELSE 0 END AS INTERESES_POR_FINANCIACION , 
CASE WHEN CHARGE_CODE_DESC = 'INTERESES POR FINANCIACION' AND CHARGE_NET_AMOUNT < 0 THEN CHARGE_NET_AMOUNT ELSE 0 END AS INTERESES_POR_FINANCIACION_B ,

CASE WHEN CHARGE_CODE_DESC = 'CARGO DE ENVIO' AND CHARGE_NET_AMOUNT >= 0 THEN CHARGE_NET_AMOUNT ELSE 0 END AS CARGO_DE_ENVIO , 
CASE WHEN CHARGE_CODE_DESC = 'CARGO DE ENVIO' AND CHARGE_NET_AMOUNT < 0 THEN CHARGE_NET_AMOUNT ELSE 0 END AS CARGO_DE_ENVIO_B ,

CASE WHEN CHARGE_CODE_DESC = 'CARGO POR CONEXIÓN DE LEC OC' AND CHARGE_NET_AMOUNT >= 0 THEN CHARGE_NET_AMOUNT ELSE 0 END AS CARGO_CONEXION_DE_LEC_OC , 
CASE WHEN CHARGE_CODE_DESC = 'CARGO POR CONEXIÓN DE LEC OC' AND CHARGE_NET_AMOUNT < 0 THEN CHARGE_NET_AMOUNT ELSE 0 END AS CARGO_CONEXION_DE_LEC_OC_B ,

CASE WHEN CHARGE_CODE_DESC = 'INSURANCE_ASSURANT_INDIVIDUOS' AND CHARGE_NET_AMOUNT >= 0 THEN CHARGE_NET_AMOUNT ELSE 0 END AS ASSURANT_INDIVIDUOS , 
CASE WHEN CHARGE_CODE_DESC = 'INSURANCE_ASSURANT_INDIVIDUOS' AND CHARGE_NET_AMOUNT < 0 THEN CHARGE_NET_AMOUNT ELSE 0 END AS ASSURANT_INDIVIDUOS_B ,

CASE WHEN CHARGE_CODE_DESC = 'INSURANCE_MOVISTAR' AND CHARGE_NET_AMOUNT >= 0 THEN CHARGE_NET_AMOUNT ELSE 0 END AS INSURANCE_MOVISTAR , 
CASE WHEN CHARGE_CODE_DESC = 'INSURANCE_MOVISTAR' AND CHARGE_NET_AMOUNT < 0 THEN CHARGE_NET_AMOUNT ELSE 0 END AS INSURANCE_MOVISTAR_B, 

CASE WHEN CHARGE_CODE_DESC = 'CARGO POR ENVÍO' AND CHARGE_NET_AMOUNT >= 0 THEN CHARGE_NET_AMOUNT ELSE 0 END AS CARGO_POR_ENVO , 
CASE WHEN CHARGE_CODE_DESC = 'CARGO POR ENVÍO' AND CHARGE_NET_AMOUNT < 0 THEN CHARGE_NET_AMOUNT ELSE 0 END AS CARGO_POR_ENVO_B ,

CASE WHEN CHARGE_CODE_DESC NOT IN ( 'DEVICE DISCOUNT',  'EQUIPO PROCEDENCIA NACIONAL' , 'WARRANTY' ,  'CARGO SIMCARD' ,  'INTERESES POR FINANCIACION' ,  'CARGO DE ENVIO'  ,  'CARGO POR CONEXIÓN DE LEC OC'  ,  'INSURANCE_ASSURANT_INDIVIDUOS'  ,'INSURANCE_MOVISTAR' , 'CARGO POR ENVÍO'  )  AND CHARGE_NET_AMOUNT >= 0 THEN CHARGE_NET_AMOUNT ELSE 0 END AS OTROS,

CASE WHEN CHARGE_CODE_DESC NOT IN ( 'DEVICE DISCOUNT',  'EQUIPO PROCEDENCIA NACIONAL' , 'WARRANTY' ,  'CARGO SIMCARD' ,  'INTERESES POR FINANCIACION' ,  'CARGO DE ENVIO'  ,  'CARGO POR CONEXIÓN DE LEC OC'  ,  'INSURANCE_ASSURANT_INDIVIDUOS'  ,'INSURANCE_MOVISTAR' , 'CARGO POR ENVÍO'  )  AND CHARGE_NET_AMOUNT < 0 THEN CHARGE_NET_AMOUNT ELSE 0 END AS OTROS_B

 FROM OPER_SUB A
 
 LEFT JOIN AR_PROD_ODS_DATA_VW.AR_INVOICE B
 		ON A.AR_INVOICE_KEY=B.AR_INVOICE_KEY
 
 LEFT JOIN AR_PROD_ODS_DATA_VW.AR_CHARGE C ON A.AR_INVOICE_KEY=C.AR_INVOICE_KEY
 
 LEFT JOIN  AR_PROD_ODS_DATA_VW.CHARGE_CODE D ON  C.CHARGE_CODE_KEY=D.CHARGE_CODE_KEY
 
 
 )WITH DATA PRIMARY INDEX(ORDER_KEY) ON COMMIT PRESERVE ROWS;
 
 -- - - - - - - - - - AGRUPACION DE LA FACTURA

 CREATE VOLATILE TABLE TOTAL_SUB_FACTURA, NO LOG AS(
 SELECT
B.ORDER_KEY,
B.INVOICE_CREATION_DATE,-- ELIMINAR PARA EVITAR ORDENES REPETIDAS
SUM (DEVICE_DISCOUNT) AS DEVICE_DISCOUNT ,
SUM (DEVICE_DISCOUNT_B) AS DEVICE_DISCOUNT_B ,
SUM (EQUIPO_PROCEDENCIA_NACIONAL) AS EQUIPO_PROCEDENCIA_NACIONAL ,
SUM (EQUIPO_PROCEDENCIA_NACIONAL_B) AS EQUIPO_PROCEDENCIA_NACIONAL_B ,
SUM (WARRANTY) AS WARRANTY ,
SUM (WARRANTY_B) AS WARRANTY_B ,
SUM (CARGO_SIMCARD) AS CARGO_SIMCARD ,
SUM (CARGO_SIMCARD_B) AS CARGO_SIMCARD_B ,
SUM (INTERESES_POR_FINANCIACION) AS INTERESES_POR_FINANCIACION ,
SUM (INTERESES_POR_FINANCIACION_B) AS INTERESES_POR_FINANCIACION_B ,
SUM (CARGO_DE_ENVIO) AS CARGO_DE_ENVIO ,
SUM (CARGO_DE_ENVIO_B) AS CARGO_DE_ENVIO_B ,
SUM (CARGO_CONEXION_DE_LEC_OC) AS CARGO_CONEXION_DE_LEC_OC ,
SUM (CARGO_CONEXION_DE_LEC_OC_B) AS CARGO_CONEXION_DE_LEC_OC_B ,
SUM (ASSURANT_INDIVIDUOS) AS ASSURANT_INDIVIDUOS ,
SUM (ASSURANT_INDIVIDUOS_B) AS ASSURANT_INDIVIDUOS_B ,
SUM (INSURANCE_MOVISTAR) AS INSURANCE_MOVISTAR ,
SUM (INSURANCE_MOVISTAR_B) AS INSURANCE_MOVISTAR_B ,
SUM (CARGO_POR_ENVO) AS CARGO_POR_ENVO ,
SUM (CARGO_POR_ENVO_B) AS CARGO_POR_ENVO_B ,
SUM (OTROS) AS OTROS ,
SUM (OTROS_B) AS OTROS_B 
 
 FROM  DETALLE_FACTURA B
 
 GROUP BY
 1,2
 
  )WITH DATA PRIMARY INDEX(ORDER_KEY) ON COMMIT PRESERVE ROWS;
 
 
 -- - - - - - - - - - - - - CANTIDAD DE CUOTAS CONTRAFACTURA PARA CADA ORDEN

  CREATE VOLATILE TABLE CUOTAS_CF, NO LOG AS(
 SELECT
A.ORDER_KEY,
XX.TOTAL_NO_OF_INSTALLMENTS AS CUOTAS 
 FROM OPER_SUB A  
  INNER JOIN AR_PROD_ODS_DATA_VW.CHARGE_REQUEST XX 
 ON A.ORDER_KEY_V = XX.ORDER_KEY
 AND TOTAL_NO_OF_INSTALLMENTS IS NOT NULL 
 GROUP BY 1,2
)WITH DATA PRIMARY INDEX(ORDER_KEY) ON COMMIT PRESERVE ROWS;
 
  -- - - - - - - - - - - - - CANTIDAD DE CUOTAS TARJETA DE CREDITO PARA CADA ORDEN

 CREATE VOLATILE TABLE CUOTAS_TC, NO LOG AS(
SELECT 
A.ORDER_KEY,

CASE 
WHEN (P.CREDIT_CARD_INSTALLMENT_NUMBER = 7 AND PS.PAYMENT_SOURCE_ID IN  ('VI' , 'CB' , 'MC' , 'AR' , 'DI'  ) )THEN 'AHORA 12'			-- IDENTIFICO EN VASE A LAS CUOTAS Y TARGETA SI ES AHORA 12/18
WHEN (P.CREDIT_CARD_INSTALLMENT_NUMBER = 8 AND PS.PAYMENT_SOURCE_ID IN  ('VI' , 'CB' , 'MC' , 'AR' , 'DI'  ) )THEN 'AHORA 18'			-- IDENTIFICO EN VASE A LAS CUOTAS Y TARGETA SI ES AHORA 12/18
WHEN (P.CREDIT_CARD_INSTALLMENT_NUMBER = 12 AND PS.PAYMENT_SOURCE_ID IN  ('AM'  ) )THEN 'AHORA 12'											-- IDENTIFICO EN VASE A LAS CUOTAS Y TARGETA SI ES AHORA 12/18
WHEN (P.CREDIT_CARD_INSTALLMENT_NUMBER = 18 AND PS.PAYMENT_SOURCE_ID IN  ('AM'  ) )THEN 'AHORA 18'											-- IDENTIFICO EN VASE A LAS CUOTAS Y TARGETA SI ES AHORA 12/18
 ELSE P.CREDIT_CARD_INSTALLMENT_NUMBER END AS CREDIT_CARD_INSTALLMENT_NUMBER,

PS.PAYMENT_SOURCE_DESC
 FROM OPER_SUB A  
 
INNER JOIN AR_PROD_ODS_DATA_VW.PAYMENT P
 	ON 
 	A.ORDER_KEY_V = P.ORDER_KEY
 	AND 
 	P.ORDER_KEY IS NOT NULL
 	AND
 	P.CREDIT_CARD_INSTALLMENT_NUMBER IS NOT NULL

INNER JOIN PAYMENT_SOURCE PS ON
P.PAYMENT_SOURCE_KEY = PS.PAYMENT_SOURCE_KEY
 
)WITH DATA PRIMARY INDEX(ORDER_KEY) ON COMMIT PRESERVE ROWS ;

-- PAGOS MULTIPLES

CREATE VOLATILE TABLE TC_MULTIPLE, NO LOG AS( 	
 
SELECT 
ORDER_KEY,
COUNT (ORDER_KEY) AS CANT
FROM CUOTAS_TC
GROUP BY 1

)WITH DATA PRIMARY INDEX(ORDER_KEY) ON COMMIT PRESERVE ROWS; 

-- PAGOS MULTIPLES

CREATE VOLATILE TABLE TC, NO LOG AS( 	 
SELECT
TC_MULTIPLE.ORDER_KEY,
CASE WHEN  CANT >1 THEN 'MULTIPLE' ELSE PAYMENT_SOURCE_DESC END AS PAYMENT_SOURCE_DESC,
MAX(CREDIT_CARD_INSTALLMENT_NUMBER)  AS CUOTAS_TC_SUM

 FROM TC_MULTIPLE
LEFT JOIN CUOTAS_TC
ON CUOTAS_TC.ORDER_KEY = TC_MULTIPLE.ORDER_KEY

GROUP BY 1,2

)WITH DATA PRIMARY INDEX(ORDER_KEY) ON COMMIT PRESERVE ROWS; 


-- - - - - - - - - GENERO MOTIVOS AGRUPADOS 


CREATE VOLATILE TABLE MOTIVO, NO LOG AS( 	 

SELECT 
ASSIGNED_PRODUCT_REASON_ID,
MAX( ASSIGNED_PRODUCT_REASON_DESC ) AS MOTIVO

FROM AR_PROD_ODS_DATA_VW.ASSIGNED_PRODUCT_REASON 

GROUP BY 1
)WITH DATA PRIMARY INDEX(ASSIGNED_PRODUCT_REASON_ID) ON COMMIT PRESERVE ROWS; 


-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
SELECT 
'722-07' AS  OPERATOR_ID
,201707 AS MONTH_DT
,OS.CUSTOMER_KEY AS CUSTOMER_ID
,OS.SUBSCRIBER_KEY AS SUBSCRIBER_ID
,OS.MSISDN AS MSISDN_ID
,OS.IMEI AS IMEI_ID
,CASE WHEN OS.TIPO_OPERACION='ALTA' THEN 10000*EXTRACT(YEAR FROM ORDER_START_DATE)+ 100*EXTRACT(MONTH FROM ORDER_START_DATE)+ EXTRACT(DAY FROM ORDER_START_DATE) ELSE 0  END AS ACTIVATION_DT
,UPPER(OS.CD_LOCALIDAD) AS GEO_AREA_ID
,CASE WHEN PRODUCTO='PREPAGO' THEN 'P'  WHEN OS.PRODUCTO LIKE '%CONTROL%' THEN 'H' ELSE 'P' END  AS PRE_POSTPAID_ID
,TRIM(OS.TIPO_OPERACION)||'-'||CASE WHEN OS.PRODUCTO<>'PREPAGO' THEN 'POSTPAGO' ELSE 'PREPAGO' END AS ACTIVATION_MOVEMENT_TYPE_ID
,OS.PRODUCT_KEY AS TARIFF_PLAN_ID
,TRIM(OS.SALES_CHANNEL_NAME) AS CHANNEL_ID
,OS.DESCRIPCION AS SALES_DISTRIBUTION_CD
,UPPER(CASE WHEN SALES_CHANNEL_NAME LIKE '%Indirectos%' OR SALES_CHANNEL_NAME LIKE '%(MS)%' OR SALES_CHANNEL_NAME LIKE '%TSO%' THEN 'RESALE' ELSE 'OWN' END) AS DISTRIBUTION_CHANNEL_CD
,CAMPANA AS CAMPAIGN_ID
,CASE WHEN PROCEDENCIA_IMEI='Triangulado' THEN 1 ELSE 2 END AS IMEI_ORIGIN_IND
,OS.GENERICO AS DEVICE_NAME
,CASE WHEN OS.BRICK LIKE '%SMPH%' THEN 1 ELSE 0 END AS SMARTPHONE_IND
,CHARGES_AMOUNT AS SALE_PRICE_AMT
,10000*EXTRACT(YEAR FROM TSF.INVOICE_CREATION_DATE)+ 100*EXTRACT(MONTH FROM TSF.INVOICE_CREATION_DATE)+ EXTRACT(DAY FROM TSF.INVOICE_CREATION_DATE) AS PURCHASE_EQUIPMENT_DT
,(TSF.DEVICE_DISCOUNT +  TSF.DEVICE_DISCOUNT_B + TSF.EQUIPO_PROCEDENCIA_NACIONAL + TSF.EQUIPO_PROCEDENCIA_NACIONAL_B + TSF.WARRANTY + TSF.WARRANTY_B + TSF.CARGO_SIMCARD + TSF.CARGO_SIMCARD_B + TSF.INTERESES_POR_FINANCIACION + TSF.INTERESES_POR_FINANCIACION_B + TSF.CARGO_DE_ENVIO  + TSF.CARGO_DE_ENVIO_B  + TSF.CARGO_CONEXION_DE_LEC_OC  + TSF.CARGO_CONEXION_DE_LEC_OC_B  + TSF.ASSURANT_INDIVIDUOS  + TSF.ASSURANT_INDIVIDUOS_B  + TSF.INSURANCE_MOVISTAR  + TSF.INSURANCE_MOVISTAR_B  + TSF.CARGO_POR_ENVO  + TSF.CARGO_POR_ENVO_B  + TSF.OTROS  + TSF.OTROS_B) AS PURCHASE_PRICE_AMT
,'' AS FINANCIAL_SUPPORT_AMT
,'' AS HU_DT
,'' AS HU_TYPE_ID
,'' AS HU_QT
,'' AS COMMISSION_QT
,'' AS HU_LOYALTY_POINTS_BALANCE_QT
,'' AS HU_LOYALTY_POINTS_REDEEMED_QT
,10000*EXTRACT(YEAR FROM TSF.INVOICE_CREATION_DATE)+ 100*EXTRACT(MONTH FROM TSF.INVOICE_CREATION_DATE)+ EXTRACT(DAY FROM TSF.INVOICE_CREATION_DATE) AS FIN_DT
,B.CUOTAS AS FIN_DURATION_QT
,(TSF.DEVICE_DISCOUNT +  TSF.DEVICE_DISCOUNT_B + TSF.EQUIPO_PROCEDENCIA_NACIONAL + TSF.EQUIPO_PROCEDENCIA_NACIONAL_B + TSF.WARRANTY + TSF.WARRANTY_B + TSF.CARGO_SIMCARD + TSF.CARGO_SIMCARD_B + TSF.INTERESES_POR_FINANCIACION + TSF.INTERESES_POR_FINANCIACION_B + TSF.CARGO_DE_ENVIO  + TSF.CARGO_DE_ENVIO_B  + TSF.CARGO_CONEXION_DE_LEC_OC  + TSF.CARGO_CONEXION_DE_LEC_OC_B  + TSF.ASSURANT_INDIVIDUOS  + TSF.ASSURANT_INDIVIDUOS_B  + TSF.INSURANCE_MOVISTAR  + TSF.INSURANCE_MOVISTAR_B  + TSF.CARGO_POR_ENVO  + TSF.CARGO_POR_ENVO_B  + TSF.OTROS  + TSF.OTROS_B) AS FIN_QT

FROM OPER_SUB OS
LEFT JOIN CUOTAS_CF B ON B.ORDER_KEY = OS.ORDER_KEY
LEFT JOIN TC C ON C.ORDER_KEY = OS.ORDER_KEY
LEFT JOIN TOTAL_SUB_FACTURA TSF ON TSF.ORDER_KEY = OS.ORDER_KEY
LEFT JOIN MOTIVO E ON E.ASSIGNED_PRODUCT_REASON_ID = OS.ASSIGNED_PRODUCT_REASON_ID
ORDER BY OS.ORDER_KEY